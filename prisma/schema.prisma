// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String?
  email         String        @unique
  password      String?
  role          String        @default("USER")
  telegramId    String?       @unique
  isActive      Boolean       @default(true)
  userStatus    String        @default("active") // active, inactive, suspended
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  subscriptions Subscription[]
  chats         Chat[]
  paymentRequests PaymentRequest[]
}

model Chat {
  id             String   @id @default(uuid())
  telegramId     String   @unique
  user           User     @relation(fields: [userId], references: [id])
  userId         String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Subscription {
  id        String   @id @default(uuid())
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  plan      String   // trial, basic, premium
  status    String   // active, expired, cancelled
  startDate DateTime @default(now())
  endDate   DateTime
  isTrial   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model PaymentRequest {
  id           String   @id @default(uuid())
  user         User     @relation(fields: [userId], references: [id])
  userId       String
  paypalOrderId String  @unique
  amount       Float
  currency     String   @default("USD")
  status       String   // 'pending', 'completed', 'failed'
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

model SystemSettings {
  id            String   @id @default(cuid())
  key           String   @unique
  value         String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}